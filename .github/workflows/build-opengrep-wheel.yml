name: build-opengrep-wheel

on:
  workflow_call:
    inputs:
      arch:
        description: "Architecture (x86_64 or aarch64)"
        required: false
        default: "x86_64"
        type: string
  workflow_dispatch: null

jobs:
  
  build-wheels:
    container: ${{ inputs.arch == 'x86_64' && 'quay.io/pypa/manylinux_2_28_x86_64' || 'quay.io/pypa/manylinux_2_28_aarch64' }} 
    runs-on: ${{ inputs.arch == 'x86_64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    steps:

      - name: install jq
        run: |
          yum update -y
          yum install -y jq
      
      - name: Get latest release tag
        id: get_release
        run: |
          tag=$(curl -s https://api.github.com/repos/opengrep/opengrep/releases/latest | jq -r .tag_name)
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Make checkout speedy
        run: git config --global fetch.parallel 50

      - name: Checkout source at release tag
        uses: actions/checkout@v4
        with:
          submodules: true
          repository: opengrep/opengrep
          ref: ${{ steps.get_release.outputs.tag }}

      - name: Set core arch based on inputs.arch
        env:
          ARCH: ${{ inputs.arch }}
        run: |
          if [ "$ARCH" = "x86_64" ]; then
            echo "CORE_ARCH=x86" >> $GITHUB_ENV
          else
            echo "CORE_ARCH=aarch64" >> $GITHUB_ENV
          fi

      - name: Download release tarball
        run: |
          tag="${{ steps.get_release.outputs.tag }}"
          url="https://github.com/opengrep/opengrep/releases/download/${tag}/opengrep-core_linux_${CORE_ARCH}.tar.gz"
          echo "Downloading $url"
          curl -L "$url" -o "opengrep-core_linux_${CORE_ARCH}.tar.gz"

      - name: Extract tarball
        run: |
          tar -xzf "opengrep-core_linux_${CORE_ARCH}.tar.gz"
          ls -lah
      
      - name: install python
        run: |
          yum install -y zip python3-pip python3.9
          alternatives --remove-all python3
          alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
          alternatives --auto python3

      - name: move opengrep-core to bin directory
        run: |
          mv opengrep-core cli/src/semgrep/bin
          ./scripts/build-wheels.sh

      - uses: actions/upload-artifact@v4
        with:
          name: manylinux-${{ inputs.arch == 'x86_64' && 'x86' || 'aarch64' }}-wheel
          path: cli/dist.zip

  test-wheels:
    container: ${{ inputs.arch == 'x86_64' && 'quay.io/pypa/manylinux_2_28_x86_64' || 'quay.io/pypa/manylinux_2_28_aarch64' }} 
    needs:
      - build-wheels
    runs-on: ${{ inputs.arch == 'x86_64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    steps:
      - uses: actions/download-artifact@v4 
        with:
          name: manylinux-${{ inputs.arch == 'x86_64' && 'x86' || 'aarch64' }}-wheel
      - run: unzip dist.zip
      - name: install package
        run: /opt/python/cp39-cp39/bin/pip install dist/*.whl
      - name: test package
        run: |
          export PATH=/opt/python/cp39-cp39/bin:$PATH
          opengrep --version
      - name: e2e opengrep-core test
        run: |
          export PATH=/opt/python/cp39-cp39/bin:$PATH
          echo '1 == 1' | opengrep -l python -e '$X == $X' -
